diff --git a/loadlib.c b/loadlib.c
index 6f9fa373..e50fbcb8 100644
--- a/loadlib.c
+++ b/loadlib.c
@@ -193,11 +193,13 @@ static void setprogdir (lua_State *L) {
 
 static void pusherror (lua_State *L) {
   int error = GetLastError();
+#if LUMBERYARD_DISABLED
   char buffer[128];
   if (FormatMessageA(FORMAT_MESSAGE_IGNORE_INSERTS | FORMAT_MESSAGE_FROM_SYSTEM,
       NULL, error, 0, buffer, sizeof(buffer)/sizeof(char), NULL))
     lua_pushstring(L, buffer);
   else
+#endif
     lua_pushfstring(L, "system error %d\n", error);
 }
 
diff --git a/loslib.c b/loslib.c
index 3e20d622..cbca1c5a 100644
--- a/loslib.c
+++ b/loslib.c
@@ -21,6 +21,9 @@
 #include "lauxlib.h"
 #include "lualib.h"
 
+#if defined(__APPLE__)
+#include <TargetConditionals.h>
+#endif
 
 /*
 ** {==================================================================
@@ -140,10 +143,15 @@
 
 
 static int os_execute (lua_State *L) {
+  #if defined(TARGET_OS_IPHONE)
+    const char* cmd = NULL;
+    int stat = -1;
+#else
   const char *cmd = luaL_optstring(L, 1, NULL);
   int stat;
   errno = 0;
   stat = system(cmd);
+#endif
   if (cmd != NULL)
     return luaL_execresult(L, stat);
   else {
@@ -160,20 +168,29 @@ static int os_remove (lua_State *L) {
 
 
 static int os_rename (lua_State *L) {
+#if !defined(TARGET_OS_IPHONE) && !defined(ANDROID)
   const char *fromname = luaL_checkstring(L, 1);
   const char *toname = luaL_checkstring(L, 2);
   return luaL_fileresult(L, rename(fromname, toname) == 0, NULL);
+#else
+  luaL_error(L, "os_rename not implemented on this platform");
+  return 1;
+#endif
 }
 
 
 static int os_tmpname (lua_State *L) {
+#if !defined(TARGET_OS_IPHONE) && !defined(ANDROID)
   char buff[LUA_TMPNAMBUFSIZE];
   int err;
   lua_tmpnam(buff, err);
   if (l_unlikely(err))
+#endif
     return luaL_error(L, "unable to generate a unique filename");
+#if !defined(TARGET_OS_IPHONE) && !defined(ANDROID)
   lua_pushstring(L, buff);
   return 1;
+#endif
 }
 
 
