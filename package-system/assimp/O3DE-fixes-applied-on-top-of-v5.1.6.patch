Subject: [PATCH 1/3] Invert PostRotation matrix in animation chains and when pivots are not being preserved.

Animations with no keytimes no longer cause AssImp to throw an assert, and instead now cause AssImp to return an error.
---
 code/AssetLib/FBX/FBXConverter.cpp | 22 ++++++++++++++++++++--
 1 file changed, 20 insertions(+), 2 deletions(-)

diff --git a/code/AssetLib/FBX/FBXConverter.cpp b/code/AssetLib/FBX/FBXConverter.cpp
index b1be6ed37..c554fd778 100644
--- a/code/AssetLib/FBX/FBXConverter.cpp
+++ b/code/AssetLib/FBX/FBXConverter.cpp
@@ -857,7 +857,12 @@ bool FBXConverter::GenerateTransformationNodeChain(const Model &model, const std
     // for (const auto &transform : chain) {
     // skip inverse chain for no preservePivots
     for (unsigned int i = TransformationComp_Translation; i < TransformationComp_MAXIMUM; i++) {
-      nd->mTransformation = nd->mTransformation * chain[i];
+
+        if (i == TransformationComp_PostRotation) {
+            chain[i] = chain[i].Inverse();
+        }
+
+        nd->mTransformation = nd->mTransformation * chain[i];
     }
     output_nodes.push_back(std::move(nd));
     return false;
@@ -3121,6 +3126,7 @@ aiNodeAnim* FBXConverter::GenerateSimpleNodeAnim(const std::string& name,
     const PropertyTable &props = target.Props();
 
     // collect unique times and keyframe lists
+    bool anyKeyframeListsPopulated = false;
     KeyFrameListList keyframeLists[TransformationComp_MAXIMUM];
     KeyTimeList keytimes;
 
@@ -3131,8 +3137,10 @@ aiNodeAnim* FBXConverter::GenerateSimpleNodeAnim(const std::string& name,
         if (i == TransformationComp_Rotation || i == TransformationComp_PreRotation
                 || i == TransformationComp_PostRotation || i == TransformationComp_GeometricRotation) {
             keyframeLists[i] = GetRotationKeyframeList((*chain[i]).second, start, stop);
+            anyKeyframeListsPopulated = true;
         } else {
             keyframeLists[i] = GetKeyframeList((*chain[i]).second, start, stop);
+            anyKeyframeListsPopulated = true;
         }
 
         for (KeyFrameListList::const_iterator it = keyframeLists[i].begin(); it != keyframeLists[i].end(); ++it) {
@@ -3147,6 +3155,13 @@ aiNodeAnim* FBXConverter::GenerateSimpleNodeAnim(const std::string& name,
         keytimes.erase(last, keytimes.end());
     }
 
+    if (keyCount == 0 && anyKeyframeListsPopulated) {
+        // Later code will assert and potentially crash if the keyCount is zero and there are keyframeLists, so check now and error out.
+        FBXImporter::LogError(Formatter::format("Animation has a key frame list with zero animation keys and cannot be loaded: ") << name);
+        // The call site asserts on the return value, and cleans it up if all keys are empty, which they will be in this error case.
+        return na.release();
+    }
+
     const Model::RotOrder rotOrder = target.RotationOrder();
     const size_t keyCount = keytimes.size();
 
@@ -3199,7 +3214,10 @@ aiNodeAnim* FBXConverter::GenerateSimpleNodeAnim(const std::string& name,
 
     const aiVector3D& postRotation = PropertyGet<aiVector3D>(props, "PostRotation", ok);
     if (ok && postRotation.SquareLength() > zero_epsilon) {
-        const aiQuaternion postQuat = EulerToQuaternion(postRotation, Model::RotOrder_EulerXYZ);
+        aiMatrix4x4 rotationMatrix;
+        GetRotationMatrix(Model::RotOrder_EulerXYZ, postRotation, rotationMatrix);
+        rotationMatrix.Inverse();
+        const auto postQuat = aiQuaternion(aiMatrix3x3(rotationMatrix));
         for (size_t i = 0; i < keyCount; ++i) {
             outRotations[i].mValue = outRotations[i].mValue * postQuat;
         }
-- 
2.31.0.windows.1


From 7cce5861059425269be68842713b0e03785e8373 Mon Sep 17 00:00:00 2001
From: AMZN-stankowi <4838196+AMZN-stankowi@users.noreply.github.com>
Date: Thu, 20 Jan 2022 12:48:02 -0800
Subject: [PATCH 2/3] Fixed compile error, moved error check to after variable
 declaration

---
 code/AssetLib/FBX/FBXConverter.cpp | 6 +++---
 1 file changed, 3 insertions(+), 3 deletions(-)

diff --git a/code/AssetLib/FBX/FBXConverter.cpp b/code/AssetLib/FBX/FBXConverter.cpp
index c554fd778..3b938690e 100644
--- a/code/AssetLib/FBX/FBXConverter.cpp
+++ b/code/AssetLib/FBX/FBXConverter.cpp
@@ -3155,6 +3155,9 @@ aiNodeAnim* FBXConverter::GenerateSimpleNodeAnim(const std::string& name,
         keytimes.erase(last, keytimes.end());
     }
 
+    const Model::RotOrder rotOrder = target.RotationOrder();
+    const size_t keyCount = keytimes.size();
+
     if (keyCount == 0 && anyKeyframeListsPopulated) {
         // Later code will assert and potentially crash if the keyCount is zero and there are keyframeLists, so check now and error out.
         FBXImporter::LogError(Formatter::format("Animation has a key frame list with zero animation keys and cannot be loaded: ") << name);
@@ -3162,9 +3165,6 @@ aiNodeAnim* FBXConverter::GenerateSimpleNodeAnim(const std::string& name,
         return na.release();
     }
 
-    const Model::RotOrder rotOrder = target.RotationOrder();
-    const size_t keyCount = keytimes.size();
-
     aiVector3D defTranslate = PropertyGet(props, "Lcl Translation", aiVector3D(0.f, 0.f, 0.f));
     aiVector3D defRotation = PropertyGet(props, "Lcl Rotation", aiVector3D(0.f, 0.f, 0.f));
     aiVector3D defScale = PropertyGet(props, "Lcl Scaling", aiVector3D(1.f, 1.f, 1.f));
-- 
2.31.0.windows.1


From 7425a267ac4452d1e63514859e8048a95b04055e Mon Sep 17 00:00:00 2001
From: AMZN-stankowi <4838196+AMZN-stankowi@users.noreply.github.com>
Date: Thu, 20 Jan 2022 12:59:51 -0800
Subject: [PATCH 3/3] Fix for string formatting

---
 code/AssetLib/FBX/FBXConverter.cpp | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/code/AssetLib/FBX/FBXConverter.cpp b/code/AssetLib/FBX/FBXConverter.cpp
index 3b938690e..b91364417 100644
--- a/code/AssetLib/FBX/FBXConverter.cpp
+++ b/code/AssetLib/FBX/FBXConverter.cpp
@@ -3160,7 +3160,7 @@ aiNodeAnim* FBXConverter::GenerateSimpleNodeAnim(const std::string& name,
 
     if (keyCount == 0 && anyKeyframeListsPopulated) {
         // Later code will assert and potentially crash if the keyCount is zero and there are keyframeLists, so check now and error out.
-        FBXImporter::LogError(Formatter::format("Animation has a key frame list with zero animation keys and cannot be loaded: ") << name);
+        FBXImporter::LogError("Animation has a key frame list with zero animation keys and cannot be loaded: ", name.c_str());
         // The call site asserts on the return value, and cleans it up if all keys are empty, which they will be in this error case.
         return na.release();
     }
-- 
2.31.0.windows.1

