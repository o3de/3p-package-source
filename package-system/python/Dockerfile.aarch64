
# Copyright (c) Contributors to the Open 3D Engine Project.
# For complete copyright and license terms please see the LICENSE at the root of this distribution.
#
# SPDX-License-Identifier: Apache-2.0 OR MIT
#

FROM arm64v8/ubuntu:20.04
 
WORKDIR /data/workspace

ARG DOCKER_BUILD_SCRIPT

# Initilize apt cache
RUN apt-get clean && apt-get update

# Install the development packages needed to build Qt from source
RUN DEBIAN_FRONTEND="noninteractive" apt-get install -y build-essential \
                                                        git \
                                                        tk8.6-dev \
                                                        python3 \
                                                        autoconf \
                                                        libssl-dev \
                                                        tcl8.6-dev \
                                                        libgdbm-compat-dev \
                                                        liblzma-dev \
                                                        libsqlite3-dev \
                                                        libreadline-dev \
                                                        libtool \
                                                        texinfo \
                                                        libbz2-dev \
                                                        libgdbm-dev

RUN apt upgrade -y

# Get expat lib to update in the cpython src
RUN git clone https://github.com/libexpat/libexpat.git --branch "R_2_4_6" --depth 1 

# Pre-build Lib FFI 3.4.2
RUN git clone https://github.com/libffi/libffi.git --branch "v3.4.2" --depth 1 && \
    cd libffi && \
    ./autogen.sh && \
    ./configure --prefix=/data/workspace/ffi_lib --enable-shared=no CFLAGS='-fPIC' CPPFLAGS='-fPIC' && \
    make install

# Pre-build OpenSSL 1.1.1q
RUN git clone https://github.com/openssl/openssl.git --branch "OpenSSL_1_1_1q" --depth 1 && \
    cd openssl && \
    ./config --prefix=/data/workspace/openssl-local/build --openssldir=/etc/ssl LDFLAGS='-Wl,-rpath=\$$ORIGIN' && \
    make && \
    make test && \
    make install

# Prepare a target folder within the container to install the build artifacts tp
RUN mkdir -p /data/workspace/build && \
    mkdir -p /data/workspace/cpython

ARG CACHEBUST=1

# Copy the build script specific to this Docker script in order to execute the build
COPY ${DOCKER_BUILD_SCRIPT} /data/workspace/
COPY src /data/workspace/cpython/
